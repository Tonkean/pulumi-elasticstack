// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Removes existing fields. If one field doesn’t exist, an exception will be thrown.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/remove-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 * import * as elasticstack from "@tonkean-public/pulumi-elasticstack";
 *
 * const remove = elasticstack.IngestProcessorRemove({
 *     fields: [
 *         "user_agent",
 *         "url",
 *     ],
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [remove.then(remove => remove.json)]});
 * ```
 */
export function ingestProcessorRemove(args: IngestProcessorRemoveArgs, opts?: pulumi.InvokeOptions): Promise<IngestProcessorRemoveResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("elasticstack:index/ingestProcessorRemove:IngestProcessorRemove", {
        "description": args.description,
        "fields": args.fields,
        "if": args.if,
        "ignoreFailure": args.ignoreFailure,
        "ignoreMissing": args.ignoreMissing,
        "onFailures": args.onFailures,
        "tag": args.tag,
    }, opts);
}

/**
 * A collection of arguments for invoking IngestProcessorRemove.
 */
export interface IngestProcessorRemoveArgs {
    /**
     * Description of the processor.
     */
    description?: string;
    /**
     * Fields to be removed.
     */
    fields: string[];
    /**
     * Conditionally execute the processor
     */
    if?: string;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: boolean;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    ignoreMissing?: boolean;
    /**
     * Handle failures for the processor.
     */
    onFailures?: string[];
    /**
     * Identifier for the processor.
     */
    tag?: string;
}

/**
 * A collection of values returned by IngestProcessorRemove.
 */
export interface IngestProcessorRemoveResult {
    /**
     * Description of the processor.
     */
    readonly description?: string;
    /**
     * Fields to be removed.
     */
    readonly fields: string[];
    /**
     * Internal identifier of the resource.
     */
    readonly id: string;
    /**
     * Conditionally execute the processor
     */
    readonly if?: string;
    /**
     * Ignore failures for the processor.
     */
    readonly ignoreFailure?: boolean;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    readonly ignoreMissing?: boolean;
    /**
     * JSON representation of this data source.
     */
    readonly json: string;
    /**
     * Handle failures for the processor.
     */
    readonly onFailures?: string[];
    /**
     * Identifier for the processor.
     */
    readonly tag?: string;
}
/**
 * Removes existing fields. If one field doesn’t exist, an exception will be thrown.
 *
 * See: https://www.elastic.co/guide/en/elasticsearch/reference/current/remove-processor.html
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as elasticstack from "@pulumi/elasticstack";
 * import * as elasticstack from "@tonkean-public/pulumi-elasticstack";
 *
 * const remove = elasticstack.IngestProcessorRemove({
 *     fields: [
 *         "user_agent",
 *         "url",
 *     ],
 * });
 * const myIngestPipeline = new elasticstack.IngestPipeline("myIngestPipeline", {processors: [remove.then(remove => remove.json)]});
 * ```
 */
export function ingestProcessorRemoveOutput(args: IngestProcessorRemoveOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<IngestProcessorRemoveResult> {
    return pulumi.output(args).apply((a: any) => ingestProcessorRemove(a, opts))
}

/**
 * A collection of arguments for invoking IngestProcessorRemove.
 */
export interface IngestProcessorRemoveOutputArgs {
    /**
     * Description of the processor.
     */
    description?: pulumi.Input<string>;
    /**
     * Fields to be removed.
     */
    fields: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Conditionally execute the processor
     */
    if?: pulumi.Input<string>;
    /**
     * Ignore failures for the processor.
     */
    ignoreFailure?: pulumi.Input<boolean>;
    /**
     * If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
     */
    ignoreMissing?: pulumi.Input<boolean>;
    /**
     * Handle failures for the processor.
     */
    onFailures?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Identifier for the processor.
     */
    tag?: pulumi.Input<string>;
}
