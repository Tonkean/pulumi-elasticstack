// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Updates cluster-wide settings. If the Elasticsearch security features are enabled, you must have the manage cluster privilege to use this API. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-update-settings.html
type ElasticstackElasticsearchClusterSettings struct {
	pulumi.CustomResourceState

	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// Settings will apply across restarts.
	Persistent ElasticstackElasticsearchClusterSettingsPersistentPtrOutput `pulumi:"persistent"`
	// Settings do not survive a full cluster restart.
	Transient ElasticstackElasticsearchClusterSettingsTransientPtrOutput `pulumi:"transient"`
}

// NewElasticstackElasticsearchClusterSettings registers a new resource with the given unique name, arguments, and options.
func NewElasticstackElasticsearchClusterSettings(ctx *pulumi.Context,
	name string, args *ElasticstackElasticsearchClusterSettingsArgs, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchClusterSettings, error) {
	if args == nil {
		args = &ElasticstackElasticsearchClusterSettingsArgs{}
	}

	var resource ElasticstackElasticsearchClusterSettings
	err := ctx.RegisterResource("elasticstack:index/elasticstackElasticsearchClusterSettings:ElasticstackElasticsearchClusterSettings", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticstackElasticsearchClusterSettings gets an existing ElasticstackElasticsearchClusterSettings resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticstackElasticsearchClusterSettings(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticstackElasticsearchClusterSettingsState, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchClusterSettings, error) {
	var resource ElasticstackElasticsearchClusterSettings
	err := ctx.ReadResource("elasticstack:index/elasticstackElasticsearchClusterSettings:ElasticstackElasticsearchClusterSettings", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticstackElasticsearchClusterSettings resources.
type elasticstackElasticsearchClusterSettingsState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchClusterSettingsElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Settings will apply across restarts.
	Persistent *ElasticstackElasticsearchClusterSettingsPersistent `pulumi:"persistent"`
	// Settings do not survive a full cluster restart.
	Transient *ElasticstackElasticsearchClusterSettingsTransient `pulumi:"transient"`
}

type ElasticstackElasticsearchClusterSettingsState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrInput
	// Settings will apply across restarts.
	Persistent ElasticstackElasticsearchClusterSettingsPersistentPtrInput
	// Settings do not survive a full cluster restart.
	Transient ElasticstackElasticsearchClusterSettingsTransientPtrInput
}

func (ElasticstackElasticsearchClusterSettingsState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchClusterSettingsState)(nil)).Elem()
}

type elasticstackElasticsearchClusterSettingsArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchClusterSettingsElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Settings will apply across restarts.
	Persistent *ElasticstackElasticsearchClusterSettingsPersistent `pulumi:"persistent"`
	// Settings do not survive a full cluster restart.
	Transient *ElasticstackElasticsearchClusterSettingsTransient `pulumi:"transient"`
}

// The set of arguments for constructing a ElasticstackElasticsearchClusterSettings resource.
type ElasticstackElasticsearchClusterSettingsArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrInput
	// Settings will apply across restarts.
	Persistent ElasticstackElasticsearchClusterSettingsPersistentPtrInput
	// Settings do not survive a full cluster restart.
	Transient ElasticstackElasticsearchClusterSettingsTransientPtrInput
}

func (ElasticstackElasticsearchClusterSettingsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchClusterSettingsArgs)(nil)).Elem()
}

type ElasticstackElasticsearchClusterSettingsInput interface {
	pulumi.Input

	ToElasticstackElasticsearchClusterSettingsOutput() ElasticstackElasticsearchClusterSettingsOutput
	ToElasticstackElasticsearchClusterSettingsOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsOutput
}

func (*ElasticstackElasticsearchClusterSettings) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (i *ElasticstackElasticsearchClusterSettings) ToElasticstackElasticsearchClusterSettingsOutput() ElasticstackElasticsearchClusterSettingsOutput {
	return i.ToElasticstackElasticsearchClusterSettingsOutputWithContext(context.Background())
}

func (i *ElasticstackElasticsearchClusterSettings) ToElasticstackElasticsearchClusterSettingsOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchClusterSettingsOutput)
}

// ElasticstackElasticsearchClusterSettingsArrayInput is an input type that accepts ElasticstackElasticsearchClusterSettingsArray and ElasticstackElasticsearchClusterSettingsArrayOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchClusterSettingsArrayInput` via:
//
//	ElasticstackElasticsearchClusterSettingsArray{ ElasticstackElasticsearchClusterSettingsArgs{...} }
type ElasticstackElasticsearchClusterSettingsArrayInput interface {
	pulumi.Input

	ToElasticstackElasticsearchClusterSettingsArrayOutput() ElasticstackElasticsearchClusterSettingsArrayOutput
	ToElasticstackElasticsearchClusterSettingsArrayOutputWithContext(context.Context) ElasticstackElasticsearchClusterSettingsArrayOutput
}

type ElasticstackElasticsearchClusterSettingsArray []ElasticstackElasticsearchClusterSettingsInput

func (ElasticstackElasticsearchClusterSettingsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (i ElasticstackElasticsearchClusterSettingsArray) ToElasticstackElasticsearchClusterSettingsArrayOutput() ElasticstackElasticsearchClusterSettingsArrayOutput {
	return i.ToElasticstackElasticsearchClusterSettingsArrayOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchClusterSettingsArray) ToElasticstackElasticsearchClusterSettingsArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchClusterSettingsArrayOutput)
}

// ElasticstackElasticsearchClusterSettingsMapInput is an input type that accepts ElasticstackElasticsearchClusterSettingsMap and ElasticstackElasticsearchClusterSettingsMapOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchClusterSettingsMapInput` via:
//
//	ElasticstackElasticsearchClusterSettingsMap{ "key": ElasticstackElasticsearchClusterSettingsArgs{...} }
type ElasticstackElasticsearchClusterSettingsMapInput interface {
	pulumi.Input

	ToElasticstackElasticsearchClusterSettingsMapOutput() ElasticstackElasticsearchClusterSettingsMapOutput
	ToElasticstackElasticsearchClusterSettingsMapOutputWithContext(context.Context) ElasticstackElasticsearchClusterSettingsMapOutput
}

type ElasticstackElasticsearchClusterSettingsMap map[string]ElasticstackElasticsearchClusterSettingsInput

func (ElasticstackElasticsearchClusterSettingsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (i ElasticstackElasticsearchClusterSettingsMap) ToElasticstackElasticsearchClusterSettingsMapOutput() ElasticstackElasticsearchClusterSettingsMapOutput {
	return i.ToElasticstackElasticsearchClusterSettingsMapOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchClusterSettingsMap) ToElasticstackElasticsearchClusterSettingsMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchClusterSettingsMapOutput)
}

type ElasticstackElasticsearchClusterSettingsOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchClusterSettingsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (o ElasticstackElasticsearchClusterSettingsOutput) ToElasticstackElasticsearchClusterSettingsOutput() ElasticstackElasticsearchClusterSettingsOutput {
	return o
}

func (o ElasticstackElasticsearchClusterSettingsOutput) ToElasticstackElasticsearchClusterSettingsOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsOutput {
	return o
}

// Elasticsearch connection configuration block.
func (o ElasticstackElasticsearchClusterSettingsOutput) ElasticsearchConnection() ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchClusterSettings) ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrOutput {
		return v.ElasticsearchConnection
	}).(ElasticstackElasticsearchClusterSettingsElasticsearchConnectionPtrOutput)
}

// Settings will apply across restarts.
func (o ElasticstackElasticsearchClusterSettingsOutput) Persistent() ElasticstackElasticsearchClusterSettingsPersistentPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchClusterSettings) ElasticstackElasticsearchClusterSettingsPersistentPtrOutput {
		return v.Persistent
	}).(ElasticstackElasticsearchClusterSettingsPersistentPtrOutput)
}

// Settings do not survive a full cluster restart.
func (o ElasticstackElasticsearchClusterSettingsOutput) Transient() ElasticstackElasticsearchClusterSettingsTransientPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchClusterSettings) ElasticstackElasticsearchClusterSettingsTransientPtrOutput {
		return v.Transient
	}).(ElasticstackElasticsearchClusterSettingsTransientPtrOutput)
}

type ElasticstackElasticsearchClusterSettingsArrayOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchClusterSettingsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (o ElasticstackElasticsearchClusterSettingsArrayOutput) ToElasticstackElasticsearchClusterSettingsArrayOutput() ElasticstackElasticsearchClusterSettingsArrayOutput {
	return o
}

func (o ElasticstackElasticsearchClusterSettingsArrayOutput) ToElasticstackElasticsearchClusterSettingsArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsArrayOutput {
	return o
}

func (o ElasticstackElasticsearchClusterSettingsArrayOutput) Index(i pulumi.IntInput) ElasticstackElasticsearchClusterSettingsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchClusterSettings {
		return vs[0].([]*ElasticstackElasticsearchClusterSettings)[vs[1].(int)]
	}).(ElasticstackElasticsearchClusterSettingsOutput)
}

type ElasticstackElasticsearchClusterSettingsMapOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchClusterSettingsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchClusterSettings)(nil)).Elem()
}

func (o ElasticstackElasticsearchClusterSettingsMapOutput) ToElasticstackElasticsearchClusterSettingsMapOutput() ElasticstackElasticsearchClusterSettingsMapOutput {
	return o
}

func (o ElasticstackElasticsearchClusterSettingsMapOutput) ToElasticstackElasticsearchClusterSettingsMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchClusterSettingsMapOutput {
	return o
}

func (o ElasticstackElasticsearchClusterSettingsMapOutput) MapIndex(k pulumi.StringInput) ElasticstackElasticsearchClusterSettingsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchClusterSettings {
		return vs[0].(map[string]*ElasticstackElasticsearchClusterSettings)[vs[1].(string)]
	}).(ElasticstackElasticsearchClusterSettingsOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchClusterSettingsInput)(nil)).Elem(), &ElasticstackElasticsearchClusterSettings{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchClusterSettingsArrayInput)(nil)).Elem(), ElasticstackElasticsearchClusterSettingsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchClusterSettingsMapInput)(nil)).Elem(), ElasticstackElasticsearchClusterSettingsMap{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchClusterSettingsOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchClusterSettingsArrayOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchClusterSettingsMapOutput{})
}
