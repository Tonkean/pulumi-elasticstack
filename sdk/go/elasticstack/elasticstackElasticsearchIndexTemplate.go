// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates or updates an index template. Index templates define settings, mappings, and aliases that can be applied automatically to new indices. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-template.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"number_of_shards": "3",
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			_, err = elasticstack.NewElasticstackElasticsearchIndexTemplate(ctx, "myTemplate", &elasticstack.ElasticstackElasticsearchIndexTemplateArgs{
//				Priority: pulumi.Int(42),
//				IndexPatterns: pulumi.StringArray{
//					pulumi.String("logstash*"),
//					pulumi.String("filebeat*"),
//				},
//				Template: &elasticstack.ElasticstackElasticsearchIndexTemplateTemplateArgs{
//					Aliases: elasticstack.ElasticstackElasticsearchIndexTemplateTemplateAliasArray{
//						&elasticstack.ElasticstackElasticsearchIndexTemplateTemplateAliasArgs{
//							Name: pulumi.String("my_template_test"),
//						},
//						&elasticstack.ElasticstackElasticsearchIndexTemplateTemplateAliasArgs{
//							Name: pulumi.String("another_test"),
//						},
//					},
//					Settings: pulumi.String(json0),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewElasticstackElasticsearchIndexTemplate(ctx, "myDataStream", &elasticstack.ElasticstackElasticsearchIndexTemplateArgs{
//				IndexPatterns: pulumi.StringArray{
//					pulumi.String("stream*"),
//				},
//				DataStream: nil,
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import elasticstack:index/elasticstackElasticsearchIndexTemplate:ElasticstackElasticsearchIndexTemplate my_template <cluster_uuid>/<template_name>
//
// ```
type ElasticstackElasticsearchIndexTemplate struct {
	pulumi.CustomResourceState

	// An ordered list of component template names.
	ComposedOfs pulumi.StringArrayOutput `pulumi:"composedOfs"`
	// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
	DataStream ElasticstackElasticsearchIndexTemplateDataStreamPtrOutput `pulumi:"dataStream"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
	IndexPatterns pulumi.StringArrayOutput `pulumi:"indexPatterns"`
	// Optional user metadata about the index template.
	Metadata pulumi.StringPtrOutput `pulumi:"metadata"`
	// Name of the index template to create.
	Name pulumi.StringOutput `pulumi:"name"`
	// Priority to determine index template precedence when a new data stream or index is created.
	Priority pulumi.IntPtrOutput `pulumi:"priority"`
	// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
	Template ElasticstackElasticsearchIndexTemplateTemplatePtrOutput `pulumi:"template"`
	// Version number used to manage index templates externally.
	Version pulumi.IntPtrOutput `pulumi:"version"`
}

// NewElasticstackElasticsearchIndexTemplate registers a new resource with the given unique name, arguments, and options.
func NewElasticstackElasticsearchIndexTemplate(ctx *pulumi.Context,
	name string, args *ElasticstackElasticsearchIndexTemplateArgs, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchIndexTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.IndexPatterns == nil {
		return nil, errors.New("invalid value for required argument 'IndexPatterns'")
	}
	var resource ElasticstackElasticsearchIndexTemplate
	err := ctx.RegisterResource("elasticstack:index/elasticstackElasticsearchIndexTemplate:ElasticstackElasticsearchIndexTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticstackElasticsearchIndexTemplate gets an existing ElasticstackElasticsearchIndexTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticstackElasticsearchIndexTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticstackElasticsearchIndexTemplateState, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchIndexTemplate, error) {
	var resource ElasticstackElasticsearchIndexTemplate
	err := ctx.ReadResource("elasticstack:index/elasticstackElasticsearchIndexTemplate:ElasticstackElasticsearchIndexTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticstackElasticsearchIndexTemplate resources.
type elasticstackElasticsearchIndexTemplateState struct {
	// An ordered list of component template names.
	ComposedOfs []string `pulumi:"composedOfs"`
	// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
	DataStream *ElasticstackElasticsearchIndexTemplateDataStream `pulumi:"dataStream"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchIndexTemplateElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
	IndexPatterns []string `pulumi:"indexPatterns"`
	// Optional user metadata about the index template.
	Metadata *string `pulumi:"metadata"`
	// Name of the index template to create.
	Name *string `pulumi:"name"`
	// Priority to determine index template precedence when a new data stream or index is created.
	Priority *int `pulumi:"priority"`
	// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
	Template *ElasticstackElasticsearchIndexTemplateTemplate `pulumi:"template"`
	// Version number used to manage index templates externally.
	Version *int `pulumi:"version"`
}

type ElasticstackElasticsearchIndexTemplateState struct {
	// An ordered list of component template names.
	ComposedOfs pulumi.StringArrayInput
	// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
	DataStream ElasticstackElasticsearchIndexTemplateDataStreamPtrInput
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrInput
	// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
	IndexPatterns pulumi.StringArrayInput
	// Optional user metadata about the index template.
	Metadata pulumi.StringPtrInput
	// Name of the index template to create.
	Name pulumi.StringPtrInput
	// Priority to determine index template precedence when a new data stream or index is created.
	Priority pulumi.IntPtrInput
	// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
	Template ElasticstackElasticsearchIndexTemplateTemplatePtrInput
	// Version number used to manage index templates externally.
	Version pulumi.IntPtrInput
}

func (ElasticstackElasticsearchIndexTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchIndexTemplateState)(nil)).Elem()
}

type elasticstackElasticsearchIndexTemplateArgs struct {
	// An ordered list of component template names.
	ComposedOfs []string `pulumi:"composedOfs"`
	// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
	DataStream *ElasticstackElasticsearchIndexTemplateDataStream `pulumi:"dataStream"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchIndexTemplateElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
	IndexPatterns []string `pulumi:"indexPatterns"`
	// Optional user metadata about the index template.
	Metadata *string `pulumi:"metadata"`
	// Name of the index template to create.
	Name *string `pulumi:"name"`
	// Priority to determine index template precedence when a new data stream or index is created.
	Priority *int `pulumi:"priority"`
	// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
	Template *ElasticstackElasticsearchIndexTemplateTemplate `pulumi:"template"`
	// Version number used to manage index templates externally.
	Version *int `pulumi:"version"`
}

// The set of arguments for constructing a ElasticstackElasticsearchIndexTemplate resource.
type ElasticstackElasticsearchIndexTemplateArgs struct {
	// An ordered list of component template names.
	ComposedOfs pulumi.StringArrayInput
	// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
	DataStream ElasticstackElasticsearchIndexTemplateDataStreamPtrInput
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrInput
	// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
	IndexPatterns pulumi.StringArrayInput
	// Optional user metadata about the index template.
	Metadata pulumi.StringPtrInput
	// Name of the index template to create.
	Name pulumi.StringPtrInput
	// Priority to determine index template precedence when a new data stream or index is created.
	Priority pulumi.IntPtrInput
	// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
	Template ElasticstackElasticsearchIndexTemplateTemplatePtrInput
	// Version number used to manage index templates externally.
	Version pulumi.IntPtrInput
}

func (ElasticstackElasticsearchIndexTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchIndexTemplateArgs)(nil)).Elem()
}

type ElasticstackElasticsearchIndexTemplateInput interface {
	pulumi.Input

	ToElasticstackElasticsearchIndexTemplateOutput() ElasticstackElasticsearchIndexTemplateOutput
	ToElasticstackElasticsearchIndexTemplateOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateOutput
}

func (*ElasticstackElasticsearchIndexTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (i *ElasticstackElasticsearchIndexTemplate) ToElasticstackElasticsearchIndexTemplateOutput() ElasticstackElasticsearchIndexTemplateOutput {
	return i.ToElasticstackElasticsearchIndexTemplateOutputWithContext(context.Background())
}

func (i *ElasticstackElasticsearchIndexTemplate) ToElasticstackElasticsearchIndexTemplateOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchIndexTemplateOutput)
}

// ElasticstackElasticsearchIndexTemplateArrayInput is an input type that accepts ElasticstackElasticsearchIndexTemplateArray and ElasticstackElasticsearchIndexTemplateArrayOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchIndexTemplateArrayInput` via:
//
//	ElasticstackElasticsearchIndexTemplateArray{ ElasticstackElasticsearchIndexTemplateArgs{...} }
type ElasticstackElasticsearchIndexTemplateArrayInput interface {
	pulumi.Input

	ToElasticstackElasticsearchIndexTemplateArrayOutput() ElasticstackElasticsearchIndexTemplateArrayOutput
	ToElasticstackElasticsearchIndexTemplateArrayOutputWithContext(context.Context) ElasticstackElasticsearchIndexTemplateArrayOutput
}

type ElasticstackElasticsearchIndexTemplateArray []ElasticstackElasticsearchIndexTemplateInput

func (ElasticstackElasticsearchIndexTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (i ElasticstackElasticsearchIndexTemplateArray) ToElasticstackElasticsearchIndexTemplateArrayOutput() ElasticstackElasticsearchIndexTemplateArrayOutput {
	return i.ToElasticstackElasticsearchIndexTemplateArrayOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchIndexTemplateArray) ToElasticstackElasticsearchIndexTemplateArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchIndexTemplateArrayOutput)
}

// ElasticstackElasticsearchIndexTemplateMapInput is an input type that accepts ElasticstackElasticsearchIndexTemplateMap and ElasticstackElasticsearchIndexTemplateMapOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchIndexTemplateMapInput` via:
//
//	ElasticstackElasticsearchIndexTemplateMap{ "key": ElasticstackElasticsearchIndexTemplateArgs{...} }
type ElasticstackElasticsearchIndexTemplateMapInput interface {
	pulumi.Input

	ToElasticstackElasticsearchIndexTemplateMapOutput() ElasticstackElasticsearchIndexTemplateMapOutput
	ToElasticstackElasticsearchIndexTemplateMapOutputWithContext(context.Context) ElasticstackElasticsearchIndexTemplateMapOutput
}

type ElasticstackElasticsearchIndexTemplateMap map[string]ElasticstackElasticsearchIndexTemplateInput

func (ElasticstackElasticsearchIndexTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (i ElasticstackElasticsearchIndexTemplateMap) ToElasticstackElasticsearchIndexTemplateMapOutput() ElasticstackElasticsearchIndexTemplateMapOutput {
	return i.ToElasticstackElasticsearchIndexTemplateMapOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchIndexTemplateMap) ToElasticstackElasticsearchIndexTemplateMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchIndexTemplateMapOutput)
}

type ElasticstackElasticsearchIndexTemplateOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIndexTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (o ElasticstackElasticsearchIndexTemplateOutput) ToElasticstackElasticsearchIndexTemplateOutput() ElasticstackElasticsearchIndexTemplateOutput {
	return o
}

func (o ElasticstackElasticsearchIndexTemplateOutput) ToElasticstackElasticsearchIndexTemplateOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateOutput {
	return o
}

// An ordered list of component template names.
func (o ElasticstackElasticsearchIndexTemplateOutput) ComposedOfs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.StringArrayOutput { return v.ComposedOfs }).(pulumi.StringArrayOutput)
}

// If this object is included, the template is used to create data streams and their backing indices. Supports an empty object.
func (o ElasticstackElasticsearchIndexTemplateOutput) DataStream() ElasticstackElasticsearchIndexTemplateDataStreamPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) ElasticstackElasticsearchIndexTemplateDataStreamPtrOutput {
		return v.DataStream
	}).(ElasticstackElasticsearchIndexTemplateDataStreamPtrOutput)
}

// Elasticsearch connection configuration block.
func (o ElasticstackElasticsearchIndexTemplateOutput) ElasticsearchConnection() ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrOutput {
		return v.ElasticsearchConnection
	}).(ElasticstackElasticsearchIndexTemplateElasticsearchConnectionPtrOutput)
}

// Array of wildcard (*) expressions used to match the names of data streams and indices during creation.
func (o ElasticstackElasticsearchIndexTemplateOutput) IndexPatterns() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.StringArrayOutput { return v.IndexPatterns }).(pulumi.StringArrayOutput)
}

// Optional user metadata about the index template.
func (o ElasticstackElasticsearchIndexTemplateOutput) Metadata() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.StringPtrOutput { return v.Metadata }).(pulumi.StringPtrOutput)
}

// Name of the index template to create.
func (o ElasticstackElasticsearchIndexTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Priority to determine index template precedence when a new data stream or index is created.
func (o ElasticstackElasticsearchIndexTemplateOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.IntPtrOutput { return v.Priority }).(pulumi.IntPtrOutput)
}

// Template to be applied. It may optionally include an aliases, mappings, or settings configuration.
func (o ElasticstackElasticsearchIndexTemplateOutput) Template() ElasticstackElasticsearchIndexTemplateTemplatePtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) ElasticstackElasticsearchIndexTemplateTemplatePtrOutput {
		return v.Template
	}).(ElasticstackElasticsearchIndexTemplateTemplatePtrOutput)
}

// Version number used to manage index templates externally.
func (o ElasticstackElasticsearchIndexTemplateOutput) Version() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchIndexTemplate) pulumi.IntPtrOutput { return v.Version }).(pulumi.IntPtrOutput)
}

type ElasticstackElasticsearchIndexTemplateArrayOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIndexTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (o ElasticstackElasticsearchIndexTemplateArrayOutput) ToElasticstackElasticsearchIndexTemplateArrayOutput() ElasticstackElasticsearchIndexTemplateArrayOutput {
	return o
}

func (o ElasticstackElasticsearchIndexTemplateArrayOutput) ToElasticstackElasticsearchIndexTemplateArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateArrayOutput {
	return o
}

func (o ElasticstackElasticsearchIndexTemplateArrayOutput) Index(i pulumi.IntInput) ElasticstackElasticsearchIndexTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchIndexTemplate {
		return vs[0].([]*ElasticstackElasticsearchIndexTemplate)[vs[1].(int)]
	}).(ElasticstackElasticsearchIndexTemplateOutput)
}

type ElasticstackElasticsearchIndexTemplateMapOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIndexTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchIndexTemplate)(nil)).Elem()
}

func (o ElasticstackElasticsearchIndexTemplateMapOutput) ToElasticstackElasticsearchIndexTemplateMapOutput() ElasticstackElasticsearchIndexTemplateMapOutput {
	return o
}

func (o ElasticstackElasticsearchIndexTemplateMapOutput) ToElasticstackElasticsearchIndexTemplateMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchIndexTemplateMapOutput {
	return o
}

func (o ElasticstackElasticsearchIndexTemplateMapOutput) MapIndex(k pulumi.StringInput) ElasticstackElasticsearchIndexTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchIndexTemplate {
		return vs[0].(map[string]*ElasticstackElasticsearchIndexTemplate)[vs[1].(string)]
	}).(ElasticstackElasticsearchIndexTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchIndexTemplateInput)(nil)).Elem(), &ElasticstackElasticsearchIndexTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchIndexTemplateArrayInput)(nil)).Elem(), ElasticstackElasticsearchIndexTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchIndexTemplateMapInput)(nil)).Elem(), ElasticstackElasticsearchIndexTemplateMap{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchIndexTemplateOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchIndexTemplateArrayOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchIndexTemplateMapOutput{})
}
