// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Extracts the registered domain (also known as the effective top-level domain or eTLD), sub-domain, and top-level domain from a fully qualified domain name (FQDN). Uses the registered domains defined in the Mozilla Public Suffix List.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/registered-domain-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/Tonkean/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			domain, err := elasticstack.IngestProcessorRegisteredDomain(ctx, &elasticstack.IngestProcessorRegisteredDomainArgs{
//				Field:       "fqdn",
//				TargetField: pulumi.StringRef("url"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewIngestPipeline(ctx, "myIngestPipeline", &elasticstack.IngestPipelineArgs{
//				Processors: pulumi.StringArray{
//					*pulumi.String(domain.Json),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func IngestProcessorRegisteredDomain(ctx *pulumi.Context, args *IngestProcessorRegisteredDomainArgs, opts ...pulumi.InvokeOption) (*IngestProcessorRegisteredDomainResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv IngestProcessorRegisteredDomainResult
	err := ctx.Invoke("elasticstack:index/ingestProcessorRegisteredDomain:IngestProcessorRegisteredDomain", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking IngestProcessorRegisteredDomain.
type IngestProcessorRegisteredDomainArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing the source FQDN.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Object field containing extracted domain components. If an `<empty string>`, the processor adds components to the document’s root.
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by IngestProcessorRegisteredDomain.
type IngestProcessorRegisteredDomainResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing the source FQDN.
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// Object field containing extracted domain components. If an `<empty string>`, the processor adds components to the document’s root.
	TargetField *string `pulumi:"targetField"`
}

func IngestProcessorRegisteredDomainOutput(ctx *pulumi.Context, args IngestProcessorRegisteredDomainOutputArgs, opts ...pulumi.InvokeOption) IngestProcessorRegisteredDomainResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (IngestProcessorRegisteredDomainResult, error) {
			args := v.(IngestProcessorRegisteredDomainArgs)
			r, err := IngestProcessorRegisteredDomain(ctx, &args, opts...)
			var s IngestProcessorRegisteredDomainResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(IngestProcessorRegisteredDomainResultOutput)
}

// A collection of arguments for invoking IngestProcessorRegisteredDomain.
type IngestProcessorRegisteredDomainOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Field containing the source FQDN.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing pulumi.BoolPtrInput `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// Object field containing extracted domain components. If an `<empty string>`, the processor adds components to the document’s root.
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (IngestProcessorRegisteredDomainOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorRegisteredDomainArgs)(nil)).Elem()
}

// A collection of values returned by IngestProcessorRegisteredDomain.
type IngestProcessorRegisteredDomainResultOutput struct{ *pulumi.OutputState }

func (IngestProcessorRegisteredDomainResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorRegisteredDomainResult)(nil)).Elem()
}

func (o IngestProcessorRegisteredDomainResultOutput) ToIngestProcessorRegisteredDomainResultOutput() IngestProcessorRegisteredDomainResultOutput {
	return o
}

func (o IngestProcessorRegisteredDomainResultOutput) ToIngestProcessorRegisteredDomainResultOutputWithContext(ctx context.Context) IngestProcessorRegisteredDomainResultOutput {
	return o
}

// Description of the processor.
func (o IngestProcessorRegisteredDomainResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Field containing the source FQDN.
func (o IngestProcessorRegisteredDomainResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o IngestProcessorRegisteredDomainResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o IngestProcessorRegisteredDomainResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o IngestProcessorRegisteredDomainResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
func (o IngestProcessorRegisteredDomainResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o IngestProcessorRegisteredDomainResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o IngestProcessorRegisteredDomainResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o IngestProcessorRegisteredDomainResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// Object field containing extracted domain components. If an `<empty string>`, the processor adds components to the document’s root.
func (o IngestProcessorRegisteredDomainResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorRegisteredDomainResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(IngestProcessorRegisteredDomainResultOutput{})
}
