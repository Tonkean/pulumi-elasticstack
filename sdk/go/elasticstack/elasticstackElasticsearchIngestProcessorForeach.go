// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Runs an ingest processor on each element of an array or object.
//
// All ingest processors can run on array or object elements. However, if the number of elements is unknown, it can be cumbersome to process each one in the same way.
//
// The `foreach` processor lets you specify a `field` containing array or object values and a `processor` to run on each element in the field.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/foreach-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			convert, err := elasticstack.ElasticstackElasticsearchIngestProcessorConvert(ctx, &elasticstack.ElasticstackElasticsearchIngestProcessorConvertArgs{
//				Field: "_ingest._value",
//				Type:  "integer",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			foreach, err := elasticstack.ElasticstackElasticsearchIngestProcessorForeach(ctx, &elasticstack.ElasticstackElasticsearchIngestProcessorForeachArgs{
//				Field:     "values",
//				Processor: convert.Json,
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewElasticstackElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticstackElasticsearchIngestPipelineArgs{
//				Processors: pulumi.StringArray{
//					*pulumi.String(foreach.Json),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func ElasticstackElasticsearchIngestProcessorForeach(ctx *pulumi.Context, args *ElasticstackElasticsearchIngestProcessorForeachArgs, opts ...pulumi.InvokeOption) (*ElasticstackElasticsearchIngestProcessorForeachResult, error) {
	var rv ElasticstackElasticsearchIngestProcessorForeachResult
	err := ctx.Invoke("elasticstack:index/elasticstackElasticsearchIngestProcessorForeach:ElasticstackElasticsearchIngestProcessorForeach", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorForeach.
type ElasticstackElasticsearchIngestProcessorForeachArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing array or object values.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Ingest processor to run on each element.
	Processor string `pulumi:"processor"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorForeach.
type ElasticstackElasticsearchIngestProcessorForeachResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Field containing array or object values.
	Field string `pulumi:"field"`
	// Internal identifier of the resource
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Ingest processor to run on each element.
	Processor string `pulumi:"processor"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func ElasticstackElasticsearchIngestProcessorForeachOutput(ctx *pulumi.Context, args ElasticstackElasticsearchIngestProcessorForeachOutputArgs, opts ...pulumi.InvokeOption) ElasticstackElasticsearchIngestProcessorForeachResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticstackElasticsearchIngestProcessorForeachResult, error) {
			args := v.(ElasticstackElasticsearchIngestProcessorForeachArgs)
			r, err := ElasticstackElasticsearchIngestProcessorForeach(ctx, &args, opts...)
			var s ElasticstackElasticsearchIngestProcessorForeachResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ElasticstackElasticsearchIngestProcessorForeachResultOutput)
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorForeach.
type ElasticstackElasticsearchIngestProcessorForeachOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Field containing array or object values.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.
	IgnoreMissing pulumi.BoolPtrInput `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Ingest processor to run on each element.
	Processor pulumi.StringInput `pulumi:"processor"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ElasticstackElasticsearchIngestProcessorForeachOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorForeachArgs)(nil)).Elem()
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorForeach.
type ElasticstackElasticsearchIngestProcessorForeachResultOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIngestProcessorForeachResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorForeachResult)(nil)).Elem()
}

func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) ToElasticstackElasticsearchIngestProcessorForeachResultOutput() ElasticstackElasticsearchIngestProcessorForeachResultOutput {
	return o
}

func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) ToElasticstackElasticsearchIngestProcessorForeachResultOutputWithContext(ctx context.Context) ElasticstackElasticsearchIngestProcessorForeachResultOutput {
	return o
}

// Description of the processor.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Field containing array or object values.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// If `true`, the processor silently exits without changing the document if the `field` is `null` or missing.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Ingest processor to run on each element.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Processor() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) string { return v.Processor }).(pulumi.StringOutput)
}

// Identifier for the processor.
func (o ElasticstackElasticsearchIngestProcessorForeachResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorForeachResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticstackElasticsearchIngestProcessorForeachResultOutput{})
}
