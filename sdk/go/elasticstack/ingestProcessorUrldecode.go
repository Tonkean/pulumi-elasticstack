// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// URL-decodes a string. If the field is an array of strings, all members of the array will be decoded.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/urldecode-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/Tonkean/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			urldecode, err := elasticstack.IngestProcessorUrldecode(ctx, &elasticstack.IngestProcessorUrldecodeArgs{
//				Field: "my_url_to_decode",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewIngestPipeline(ctx, "myIngestPipeline", &elasticstack.IngestPipelineArgs{
//				Processors: pulumi.StringArray{
//					*pulumi.String(urldecode.Json),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func IngestProcessorUrldecode(ctx *pulumi.Context, args *IngestProcessorUrldecodeArgs, opts ...pulumi.InvokeOption) (*IngestProcessorUrldecodeResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv IngestProcessorUrldecodeResult
	err := ctx.Invoke("elasticstack:index/ingestProcessorUrldecode:IngestProcessorUrldecode", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking IngestProcessorUrldecode.
type IngestProcessorUrldecodeArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to decode
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by IngestProcessorUrldecode.
type IngestProcessorUrldecodeResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to decode
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing *bool `pulumi:"ignoreMissing"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField *string `pulumi:"targetField"`
}

func IngestProcessorUrldecodeOutput(ctx *pulumi.Context, args IngestProcessorUrldecodeOutputArgs, opts ...pulumi.InvokeOption) IngestProcessorUrldecodeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (IngestProcessorUrldecodeResult, error) {
			args := v.(IngestProcessorUrldecodeArgs)
			r, err := IngestProcessorUrldecode(ctx, &args, opts...)
			var s IngestProcessorUrldecodeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(IngestProcessorUrldecodeResultOutput)
}

// A collection of arguments for invoking IngestProcessorUrldecode.
type IngestProcessorUrldecodeOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field to decode
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
	IgnoreMissing pulumi.BoolPtrInput `pulumi:"ignoreMissing"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The field to assign the converted value to, by default `field` is updated in-place.
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (IngestProcessorUrldecodeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorUrldecodeArgs)(nil)).Elem()
}

// A collection of values returned by IngestProcessorUrldecode.
type IngestProcessorUrldecodeResultOutput struct{ *pulumi.OutputState }

func (IngestProcessorUrldecodeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorUrldecodeResult)(nil)).Elem()
}

func (o IngestProcessorUrldecodeResultOutput) ToIngestProcessorUrldecodeResultOutput() IngestProcessorUrldecodeResultOutput {
	return o
}

func (o IngestProcessorUrldecodeResultOutput) ToIngestProcessorUrldecodeResultOutputWithContext(ctx context.Context) IngestProcessorUrldecodeResultOutput {
	return o
}

// Description of the processor.
func (o IngestProcessorUrldecodeResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field to decode
func (o IngestProcessorUrldecodeResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o IngestProcessorUrldecodeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o IngestProcessorUrldecodeResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o IngestProcessorUrldecodeResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// If `true` and `field` does not exist or is `null`, the processor quietly exits without modifying the document.
func (o IngestProcessorUrldecodeResultOutput) IgnoreMissing() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *bool { return v.IgnoreMissing }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o IngestProcessorUrldecodeResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o IngestProcessorUrldecodeResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o IngestProcessorUrldecodeResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The field to assign the converted value to, by default `field` is updated in-place.
func (o IngestProcessorUrldecodeResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorUrldecodeResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(IngestProcessorUrldecodeResultOutput{})
}
