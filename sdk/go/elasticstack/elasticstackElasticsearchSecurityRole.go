// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Adds and updates roles in the native realm. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-put-role.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"version": 1,
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			roleElasticstackElasticsearchSecurityRole, err := elasticstack.NewElasticstackElasticsearchSecurityRole(ctx, "roleElasticstackElasticsearchSecurityRole", &elasticstack.ElasticstackElasticsearchSecurityRoleArgs{
//				Clusters: pulumi.StringArray{
//					pulumi.String("all"),
//				},
//				Indices: elasticstack.ElasticstackElasticsearchSecurityRoleIndexArray{
//					&elasticstack.ElasticstackElasticsearchSecurityRoleIndexArgs{
//						Names: pulumi.StringArray{
//							pulumi.String("index1"),
//							pulumi.String("index2"),
//						},
//						Privileges: pulumi.StringArray{
//							pulumi.String("all"),
//						},
//					},
//				},
//				Applications: elasticstack.ElasticstackElasticsearchSecurityRoleApplicationArray{
//					&elasticstack.ElasticstackElasticsearchSecurityRoleApplicationArgs{
//						Application: pulumi.String("myapp"),
//						Privileges: pulumi.StringArray{
//							pulumi.String("admin"),
//							pulumi.String("read"),
//						},
//						Resources: pulumi.StringArray{
//							pulumi.String("*"),
//						},
//					},
//				},
//				RunAs: pulumi.StringArray{
//					pulumi.String("other_user"),
//				},
//				Metadata: pulumi.String(json0),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("role", roleElasticstackElasticsearchSecurityRole)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// ```sh
//
//	$ pulumi import elasticstack:index/elasticstackElasticsearchSecurityRole:ElasticstackElasticsearchSecurityRole my_role <cluster_uuid>/<role name>
//
// ```
type ElasticstackElasticsearchSecurityRole struct {
	pulumi.CustomResourceState

	// A list of application privilege entries.
	Applications ElasticstackElasticsearchSecurityRoleApplicationArrayOutput `pulumi:"applications"`
	// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
	Clusters pulumi.StringArrayOutput `pulumi:"clusters"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// An object defining global privileges.
	Global pulumi.StringPtrOutput `pulumi:"global"`
	// A list of indices permissions entries.
	Indices ElasticstackElasticsearchSecurityRoleIndexArrayOutput `pulumi:"indices"`
	// Optional meta-data.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// The name of the role.
	Name pulumi.StringOutput `pulumi:"name"`
	// A list of users that the owners of this role can impersonate.
	RunAs pulumi.StringArrayOutput `pulumi:"runAs"`
}

// NewElasticstackElasticsearchSecurityRole registers a new resource with the given unique name, arguments, and options.
func NewElasticstackElasticsearchSecurityRole(ctx *pulumi.Context,
	name string, args *ElasticstackElasticsearchSecurityRoleArgs, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecurityRole, error) {
	if args == nil {
		args = &ElasticstackElasticsearchSecurityRoleArgs{}
	}

	var resource ElasticstackElasticsearchSecurityRole
	err := ctx.RegisterResource("elasticstack:index/elasticstackElasticsearchSecurityRole:ElasticstackElasticsearchSecurityRole", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticstackElasticsearchSecurityRole gets an existing ElasticstackElasticsearchSecurityRole resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticstackElasticsearchSecurityRole(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticstackElasticsearchSecurityRoleState, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecurityRole, error) {
	var resource ElasticstackElasticsearchSecurityRole
	err := ctx.ReadResource("elasticstack:index/elasticstackElasticsearchSecurityRole:ElasticstackElasticsearchSecurityRole", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticstackElasticsearchSecurityRole resources.
type elasticstackElasticsearchSecurityRoleState struct {
	// A list of application privilege entries.
	Applications []ElasticstackElasticsearchSecurityRoleApplication `pulumi:"applications"`
	// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
	Clusters []string `pulumi:"clusters"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecurityRoleElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// An object defining global privileges.
	Global *string `pulumi:"global"`
	// A list of indices permissions entries.
	Indices []ElasticstackElasticsearchSecurityRoleIndex `pulumi:"indices"`
	// Optional meta-data.
	Metadata *string `pulumi:"metadata"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// A list of users that the owners of this role can impersonate.
	RunAs []string `pulumi:"runAs"`
}

type ElasticstackElasticsearchSecurityRoleState struct {
	// A list of application privilege entries.
	Applications ElasticstackElasticsearchSecurityRoleApplicationArrayInput
	// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
	Clusters pulumi.StringArrayInput
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrInput
	// An object defining global privileges.
	Global pulumi.StringPtrInput
	// A list of indices permissions entries.
	Indices ElasticstackElasticsearchSecurityRoleIndexArrayInput
	// Optional meta-data.
	Metadata pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// A list of users that the owners of this role can impersonate.
	RunAs pulumi.StringArrayInput
}

func (ElasticstackElasticsearchSecurityRoleState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecurityRoleState)(nil)).Elem()
}

type elasticstackElasticsearchSecurityRoleArgs struct {
	// A list of application privilege entries.
	Applications []ElasticstackElasticsearchSecurityRoleApplication `pulumi:"applications"`
	// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
	Clusters []string `pulumi:"clusters"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecurityRoleElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// An object defining global privileges.
	Global *string `pulumi:"global"`
	// A list of indices permissions entries.
	Indices []ElasticstackElasticsearchSecurityRoleIndex `pulumi:"indices"`
	// Optional meta-data.
	Metadata *string `pulumi:"metadata"`
	// The name of the role.
	Name *string `pulumi:"name"`
	// A list of users that the owners of this role can impersonate.
	RunAs []string `pulumi:"runAs"`
}

// The set of arguments for constructing a ElasticstackElasticsearchSecurityRole resource.
type ElasticstackElasticsearchSecurityRoleArgs struct {
	// A list of application privilege entries.
	Applications ElasticstackElasticsearchSecurityRoleApplicationArrayInput
	// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
	Clusters pulumi.StringArrayInput
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrInput
	// An object defining global privileges.
	Global pulumi.StringPtrInput
	// A list of indices permissions entries.
	Indices ElasticstackElasticsearchSecurityRoleIndexArrayInput
	// Optional meta-data.
	Metadata pulumi.StringPtrInput
	// The name of the role.
	Name pulumi.StringPtrInput
	// A list of users that the owners of this role can impersonate.
	RunAs pulumi.StringArrayInput
}

func (ElasticstackElasticsearchSecurityRoleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecurityRoleArgs)(nil)).Elem()
}

type ElasticstackElasticsearchSecurityRoleInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityRoleOutput() ElasticstackElasticsearchSecurityRoleOutput
	ToElasticstackElasticsearchSecurityRoleOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleOutput
}

func (*ElasticstackElasticsearchSecurityRole) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (i *ElasticstackElasticsearchSecurityRole) ToElasticstackElasticsearchSecurityRoleOutput() ElasticstackElasticsearchSecurityRoleOutput {
	return i.ToElasticstackElasticsearchSecurityRoleOutputWithContext(context.Background())
}

func (i *ElasticstackElasticsearchSecurityRole) ToElasticstackElasticsearchSecurityRoleOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityRoleOutput)
}

// ElasticstackElasticsearchSecurityRoleArrayInput is an input type that accepts ElasticstackElasticsearchSecurityRoleArray and ElasticstackElasticsearchSecurityRoleArrayOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecurityRoleArrayInput` via:
//
//	ElasticstackElasticsearchSecurityRoleArray{ ElasticstackElasticsearchSecurityRoleArgs{...} }
type ElasticstackElasticsearchSecurityRoleArrayInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityRoleArrayOutput() ElasticstackElasticsearchSecurityRoleArrayOutput
	ToElasticstackElasticsearchSecurityRoleArrayOutputWithContext(context.Context) ElasticstackElasticsearchSecurityRoleArrayOutput
}

type ElasticstackElasticsearchSecurityRoleArray []ElasticstackElasticsearchSecurityRoleInput

func (ElasticstackElasticsearchSecurityRoleArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecurityRoleArray) ToElasticstackElasticsearchSecurityRoleArrayOutput() ElasticstackElasticsearchSecurityRoleArrayOutput {
	return i.ToElasticstackElasticsearchSecurityRoleArrayOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecurityRoleArray) ToElasticstackElasticsearchSecurityRoleArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityRoleArrayOutput)
}

// ElasticstackElasticsearchSecurityRoleMapInput is an input type that accepts ElasticstackElasticsearchSecurityRoleMap and ElasticstackElasticsearchSecurityRoleMapOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecurityRoleMapInput` via:
//
//	ElasticstackElasticsearchSecurityRoleMap{ "key": ElasticstackElasticsearchSecurityRoleArgs{...} }
type ElasticstackElasticsearchSecurityRoleMapInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityRoleMapOutput() ElasticstackElasticsearchSecurityRoleMapOutput
	ToElasticstackElasticsearchSecurityRoleMapOutputWithContext(context.Context) ElasticstackElasticsearchSecurityRoleMapOutput
}

type ElasticstackElasticsearchSecurityRoleMap map[string]ElasticstackElasticsearchSecurityRoleInput

func (ElasticstackElasticsearchSecurityRoleMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecurityRoleMap) ToElasticstackElasticsearchSecurityRoleMapOutput() ElasticstackElasticsearchSecurityRoleMapOutput {
	return i.ToElasticstackElasticsearchSecurityRoleMapOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecurityRoleMap) ToElasticstackElasticsearchSecurityRoleMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityRoleMapOutput)
}

type ElasticstackElasticsearchSecurityRoleOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityRoleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityRoleOutput) ToElasticstackElasticsearchSecurityRoleOutput() ElasticstackElasticsearchSecurityRoleOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityRoleOutput) ToElasticstackElasticsearchSecurityRoleOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleOutput {
	return o
}

// A list of application privilege entries.
func (o ElasticstackElasticsearchSecurityRoleOutput) Applications() ElasticstackElasticsearchSecurityRoleApplicationArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) ElasticstackElasticsearchSecurityRoleApplicationArrayOutput {
		return v.Applications
	}).(ElasticstackElasticsearchSecurityRoleApplicationArrayOutput)
}

// A list of cluster privileges. These privileges define the cluster level actions that users with this role are able to execute.
func (o ElasticstackElasticsearchSecurityRoleOutput) Clusters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) pulumi.StringArrayOutput { return v.Clusters }).(pulumi.StringArrayOutput)
}

// Elasticsearch connection configuration block.
func (o ElasticstackElasticsearchSecurityRoleOutput) ElasticsearchConnection() ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrOutput {
		return v.ElasticsearchConnection
	}).(ElasticstackElasticsearchSecurityRoleElasticsearchConnectionPtrOutput)
}

// An object defining global privileges.
func (o ElasticstackElasticsearchSecurityRoleOutput) Global() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) pulumi.StringPtrOutput { return v.Global }).(pulumi.StringPtrOutput)
}

// A list of indices permissions entries.
func (o ElasticstackElasticsearchSecurityRoleOutput) Indices() ElasticstackElasticsearchSecurityRoleIndexArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) ElasticstackElasticsearchSecurityRoleIndexArrayOutput {
		return v.Indices
	}).(ElasticstackElasticsearchSecurityRoleIndexArrayOutput)
}

// Optional meta-data.
func (o ElasticstackElasticsearchSecurityRoleOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// The name of the role.
func (o ElasticstackElasticsearchSecurityRoleOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// A list of users that the owners of this role can impersonate.
func (o ElasticstackElasticsearchSecurityRoleOutput) RunAs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityRole) pulumi.StringArrayOutput { return v.RunAs }).(pulumi.StringArrayOutput)
}

type ElasticstackElasticsearchSecurityRoleArrayOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityRoleArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityRoleArrayOutput) ToElasticstackElasticsearchSecurityRoleArrayOutput() ElasticstackElasticsearchSecurityRoleArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityRoleArrayOutput) ToElasticstackElasticsearchSecurityRoleArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityRoleArrayOutput) Index(i pulumi.IntInput) ElasticstackElasticsearchSecurityRoleOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecurityRole {
		return vs[0].([]*ElasticstackElasticsearchSecurityRole)[vs[1].(int)]
	}).(ElasticstackElasticsearchSecurityRoleOutput)
}

type ElasticstackElasticsearchSecurityRoleMapOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityRoleMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecurityRole)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityRoleMapOutput) ToElasticstackElasticsearchSecurityRoleMapOutput() ElasticstackElasticsearchSecurityRoleMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityRoleMapOutput) ToElasticstackElasticsearchSecurityRoleMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityRoleMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityRoleMapOutput) MapIndex(k pulumi.StringInput) ElasticstackElasticsearchSecurityRoleOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecurityRole {
		return vs[0].(map[string]*ElasticstackElasticsearchSecurityRole)[vs[1].(string)]
	}).(ElasticstackElasticsearchSecurityRoleOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityRoleInput)(nil)).Elem(), &ElasticstackElasticsearchSecurityRole{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityRoleArrayInput)(nil)).Elem(), ElasticstackElasticsearchSecurityRoleArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityRoleMapInput)(nil)).Elem(), ElasticstackElasticsearchSecurityRoleMap{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityRoleOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityRoleArrayOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityRoleMapOutput{})
}
