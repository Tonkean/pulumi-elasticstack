// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"fmt"
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := elasticstack.NewElasticstackElasticsearchSecuritySystemUser(ctx, "kibanaSystem", &elasticstack.ElasticstackElasticsearchSecuritySystemUserArgs{
//				ElasticsearchConnection: &elasticstack.ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionArgs{
//					Endpoints: pulumi.StringArray{
//						pulumi.String("http://localhost:9200"),
//					},
//					Password: pulumi.String("changeme"),
//					Username: pulumi.String("elastic"),
//				},
//				PasswordHash: pulumi.String(fmt.Sprintf("$2a$10$rMZe6TdsUwBX/TA8vRDz0OLwKAZeCzXM4jT3tfCjpSTB8HoFuq8xO")),
//				Username:     pulumi.String("kibana_system"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
type ElasticstackElasticsearchSecuritySystemUser struct {
	pulumi.CustomResourceState

	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// Specifies whether the user is enabled. The default value is true.
	Enabled pulumi.BoolPtrOutput `pulumi:"enabled"`
	// The user’s password. Passwords must be at least 6 characters long.
	Password pulumi.StringPtrOutput `pulumi:"password"`
	// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
	PasswordHash pulumi.StringPtrOutput `pulumi:"passwordHash"`
	// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
	Username pulumi.StringOutput `pulumi:"username"`
}

// NewElasticstackElasticsearchSecuritySystemUser registers a new resource with the given unique name, arguments, and options.
func NewElasticstackElasticsearchSecuritySystemUser(ctx *pulumi.Context,
	name string, args *ElasticstackElasticsearchSecuritySystemUserArgs, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecuritySystemUser, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringPtrInput)
	}
	if args.PasswordHash != nil {
		args.PasswordHash = pulumi.ToSecret(args.PasswordHash).(pulumi.StringPtrInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
		"passwordHash",
	})
	opts = append(opts, secrets)
	var resource ElasticstackElasticsearchSecuritySystemUser
	err := ctx.RegisterResource("elasticstack:index/elasticstackElasticsearchSecuritySystemUser:ElasticstackElasticsearchSecuritySystemUser", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticstackElasticsearchSecuritySystemUser gets an existing ElasticstackElasticsearchSecuritySystemUser resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticstackElasticsearchSecuritySystemUser(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticstackElasticsearchSecuritySystemUserState, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecuritySystemUser, error) {
	var resource ElasticstackElasticsearchSecuritySystemUser
	err := ctx.ReadResource("elasticstack:index/elasticstackElasticsearchSecuritySystemUser:ElasticstackElasticsearchSecuritySystemUser", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticstackElasticsearchSecuritySystemUser resources.
type elasticstackElasticsearchSecuritySystemUserState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecuritySystemUserElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Specifies whether the user is enabled. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The user’s password. Passwords must be at least 6 characters long.
	Password *string `pulumi:"password"`
	// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
	PasswordHash *string `pulumi:"passwordHash"`
	// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
	Username *string `pulumi:"username"`
}

type ElasticstackElasticsearchSecuritySystemUserState struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrInput
	// Specifies whether the user is enabled. The default value is true.
	Enabled pulumi.BoolPtrInput
	// The user’s password. Passwords must be at least 6 characters long.
	Password pulumi.StringPtrInput
	// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
	PasswordHash pulumi.StringPtrInput
	// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
	Username pulumi.StringPtrInput
}

func (ElasticstackElasticsearchSecuritySystemUserState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecuritySystemUserState)(nil)).Elem()
}

type elasticstackElasticsearchSecuritySystemUserArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecuritySystemUserElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Specifies whether the user is enabled. The default value is true.
	Enabled *bool `pulumi:"enabled"`
	// The user’s password. Passwords must be at least 6 characters long.
	Password *string `pulumi:"password"`
	// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
	PasswordHash *string `pulumi:"passwordHash"`
	// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
	Username string `pulumi:"username"`
}

// The set of arguments for constructing a ElasticstackElasticsearchSecuritySystemUser resource.
type ElasticstackElasticsearchSecuritySystemUserArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrInput
	// Specifies whether the user is enabled. The default value is true.
	Enabled pulumi.BoolPtrInput
	// The user’s password. Passwords must be at least 6 characters long.
	Password pulumi.StringPtrInput
	// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
	PasswordHash pulumi.StringPtrInput
	// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
	Username pulumi.StringInput
}

func (ElasticstackElasticsearchSecuritySystemUserArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecuritySystemUserArgs)(nil)).Elem()
}

type ElasticstackElasticsearchSecuritySystemUserInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecuritySystemUserOutput() ElasticstackElasticsearchSecuritySystemUserOutput
	ToElasticstackElasticsearchSecuritySystemUserOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserOutput
}

func (*ElasticstackElasticsearchSecuritySystemUser) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (i *ElasticstackElasticsearchSecuritySystemUser) ToElasticstackElasticsearchSecuritySystemUserOutput() ElasticstackElasticsearchSecuritySystemUserOutput {
	return i.ToElasticstackElasticsearchSecuritySystemUserOutputWithContext(context.Background())
}

func (i *ElasticstackElasticsearchSecuritySystemUser) ToElasticstackElasticsearchSecuritySystemUserOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecuritySystemUserOutput)
}

// ElasticstackElasticsearchSecuritySystemUserArrayInput is an input type that accepts ElasticstackElasticsearchSecuritySystemUserArray and ElasticstackElasticsearchSecuritySystemUserArrayOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecuritySystemUserArrayInput` via:
//
//	ElasticstackElasticsearchSecuritySystemUserArray{ ElasticstackElasticsearchSecuritySystemUserArgs{...} }
type ElasticstackElasticsearchSecuritySystemUserArrayInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecuritySystemUserArrayOutput() ElasticstackElasticsearchSecuritySystemUserArrayOutput
	ToElasticstackElasticsearchSecuritySystemUserArrayOutputWithContext(context.Context) ElasticstackElasticsearchSecuritySystemUserArrayOutput
}

type ElasticstackElasticsearchSecuritySystemUserArray []ElasticstackElasticsearchSecuritySystemUserInput

func (ElasticstackElasticsearchSecuritySystemUserArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecuritySystemUserArray) ToElasticstackElasticsearchSecuritySystemUserArrayOutput() ElasticstackElasticsearchSecuritySystemUserArrayOutput {
	return i.ToElasticstackElasticsearchSecuritySystemUserArrayOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecuritySystemUserArray) ToElasticstackElasticsearchSecuritySystemUserArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecuritySystemUserArrayOutput)
}

// ElasticstackElasticsearchSecuritySystemUserMapInput is an input type that accepts ElasticstackElasticsearchSecuritySystemUserMap and ElasticstackElasticsearchSecuritySystemUserMapOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecuritySystemUserMapInput` via:
//
//	ElasticstackElasticsearchSecuritySystemUserMap{ "key": ElasticstackElasticsearchSecuritySystemUserArgs{...} }
type ElasticstackElasticsearchSecuritySystemUserMapInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecuritySystemUserMapOutput() ElasticstackElasticsearchSecuritySystemUserMapOutput
	ToElasticstackElasticsearchSecuritySystemUserMapOutputWithContext(context.Context) ElasticstackElasticsearchSecuritySystemUserMapOutput
}

type ElasticstackElasticsearchSecuritySystemUserMap map[string]ElasticstackElasticsearchSecuritySystemUserInput

func (ElasticstackElasticsearchSecuritySystemUserMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecuritySystemUserMap) ToElasticstackElasticsearchSecuritySystemUserMapOutput() ElasticstackElasticsearchSecuritySystemUserMapOutput {
	return i.ToElasticstackElasticsearchSecuritySystemUserMapOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecuritySystemUserMap) ToElasticstackElasticsearchSecuritySystemUserMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecuritySystemUserMapOutput)
}

type ElasticstackElasticsearchSecuritySystemUserOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecuritySystemUserOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecuritySystemUserOutput) ToElasticstackElasticsearchSecuritySystemUserOutput() ElasticstackElasticsearchSecuritySystemUserOutput {
	return o
}

func (o ElasticstackElasticsearchSecuritySystemUserOutput) ToElasticstackElasticsearchSecuritySystemUserOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserOutput {
	return o
}

// Elasticsearch connection configuration block.
func (o ElasticstackElasticsearchSecuritySystemUserOutput) ElasticsearchConnection() ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecuritySystemUser) ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrOutput {
		return v.ElasticsearchConnection
	}).(ElasticstackElasticsearchSecuritySystemUserElasticsearchConnectionPtrOutput)
}

// Specifies whether the user is enabled. The default value is true.
func (o ElasticstackElasticsearchSecuritySystemUserOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecuritySystemUser) pulumi.BoolPtrOutput { return v.Enabled }).(pulumi.BoolPtrOutput)
}

// The user’s password. Passwords must be at least 6 characters long.
func (o ElasticstackElasticsearchSecuritySystemUserOutput) Password() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecuritySystemUser) pulumi.StringPtrOutput { return v.Password }).(pulumi.StringPtrOutput)
}

// A hash of the user’s password. This must be produced using the same hashing algorithm as has been configured for password storage (see https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html#hashing-settings).
func (o ElasticstackElasticsearchSecuritySystemUserOutput) PasswordHash() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecuritySystemUser) pulumi.StringPtrOutput { return v.PasswordHash }).(pulumi.StringPtrOutput)
}

// An identifier for the system user (see https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-users.html).
func (o ElasticstackElasticsearchSecuritySystemUserOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecuritySystemUser) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

type ElasticstackElasticsearchSecuritySystemUserArrayOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecuritySystemUserArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecuritySystemUserArrayOutput) ToElasticstackElasticsearchSecuritySystemUserArrayOutput() ElasticstackElasticsearchSecuritySystemUserArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecuritySystemUserArrayOutput) ToElasticstackElasticsearchSecuritySystemUserArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecuritySystemUserArrayOutput) Index(i pulumi.IntInput) ElasticstackElasticsearchSecuritySystemUserOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecuritySystemUser {
		return vs[0].([]*ElasticstackElasticsearchSecuritySystemUser)[vs[1].(int)]
	}).(ElasticstackElasticsearchSecuritySystemUserOutput)
}

type ElasticstackElasticsearchSecuritySystemUserMapOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecuritySystemUserMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecuritySystemUser)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecuritySystemUserMapOutput) ToElasticstackElasticsearchSecuritySystemUserMapOutput() ElasticstackElasticsearchSecuritySystemUserMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecuritySystemUserMapOutput) ToElasticstackElasticsearchSecuritySystemUserMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecuritySystemUserMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecuritySystemUserMapOutput) MapIndex(k pulumi.StringInput) ElasticstackElasticsearchSecuritySystemUserOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecuritySystemUser {
		return vs[0].(map[string]*ElasticstackElasticsearchSecuritySystemUser)[vs[1].(string)]
	}).(ElasticstackElasticsearchSecuritySystemUserOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecuritySystemUserInput)(nil)).Elem(), &ElasticstackElasticsearchSecuritySystemUser{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecuritySystemUserArrayInput)(nil)).Elem(), ElasticstackElasticsearchSecuritySystemUserArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecuritySystemUserMapInput)(nil)).Elem(), ElasticstackElasticsearchSecuritySystemUserMap{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecuritySystemUserOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecuritySystemUserArrayOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecuritySystemUserMapOutput{})
}
