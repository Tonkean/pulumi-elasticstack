// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Sets user-related details (such as `username`, `roles`, `email`, `fullName`, `metadata`, `apiKey`, `realm` and `authenticationTyp`e) from the current authenticated user to the current document by pre-processing the ingest. The `apiKey` property exists only if the user authenticates with an API key. It is an object containing the id, name and metadata (if it exists and is non-empty) fields of the API key. The realm property is also an object with two fields, name and type. When using API key authentication, the realm property refers to the realm from which the API key is created. The `authenticationType property` is a string that can take value from `REALM`, `API_KEY`, `TOKEN` and `ANONYMOUS`.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/ingest-node-set-security-user-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			user, err := elasticstack.ElasticstackElasticsearchIngestProcessorSetSecurityUser(ctx, &elasticstack.ElasticstackElasticsearchIngestProcessorSetSecurityUserArgs{
//				Field: "user",
//				Properties: []string{
//					"username",
//					"realm",
//				},
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewElasticstackElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticstackElasticsearchIngestPipelineArgs{
//				Processors: pulumi.StringArray{
//					*pulumi.String(user.Json),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func ElasticstackElasticsearchIngestProcessorSetSecurityUser(ctx *pulumi.Context, args *ElasticstackElasticsearchIngestProcessorSetSecurityUserArgs, opts ...pulumi.InvokeOption) (*ElasticstackElasticsearchIngestProcessorSetSecurityUserResult, error) {
	var rv ElasticstackElasticsearchIngestProcessorSetSecurityUserResult
	err := ctx.Invoke("elasticstack:index/elasticstackElasticsearchIngestProcessorSetSecurityUser:ElasticstackElasticsearchIngestProcessorSetSecurityUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorSetSecurityUser.
type ElasticstackElasticsearchIngestProcessorSetSecurityUserArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to store the user information into.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties []string `pulumi:"properties"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorSetSecurityUser.
type ElasticstackElasticsearchIngestProcessorSetSecurityUserResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to store the user information into.
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties []string `pulumi:"properties"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func ElasticstackElasticsearchIngestProcessorSetSecurityUserOutput(ctx *pulumi.Context, args ElasticstackElasticsearchIngestProcessorSetSecurityUserOutputArgs, opts ...pulumi.InvokeOption) ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticstackElasticsearchIngestProcessorSetSecurityUserResult, error) {
			args := v.(ElasticstackElasticsearchIngestProcessorSetSecurityUserArgs)
			r, err := ElasticstackElasticsearchIngestProcessorSetSecurityUser(ctx, &args, opts...)
			var s ElasticstackElasticsearchIngestProcessorSetSecurityUserResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput)
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorSetSecurityUser.
type ElasticstackElasticsearchIngestProcessorSetSecurityUserOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field to store the user information into.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Controls what user related properties are added to the `field`.
	Properties pulumi.StringArrayInput `pulumi:"properties"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (ElasticstackElasticsearchIngestProcessorSetSecurityUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorSetSecurityUserArgs)(nil)).Elem()
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorSetSecurityUser.
type ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorSetSecurityUserResult)(nil)).Elem()
}

func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) ToElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput() ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return o
}

func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) ToElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutputWithContext(ctx context.Context) ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput {
	return o
}

// Description of the processor.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field to store the user information into.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Controls what user related properties are added to the `field`.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Properties() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) []string { return v.Properties }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorSetSecurityUserResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticstackElasticsearchIngestProcessorSetSecurityUserResultOutput{})
}
