// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Runs an inline or stored script on incoming documents. The script runs in the ingest context.
//
// The script processor uses the script cache to avoid recompiling the script for each incoming document. To improve performance, ensure the script cache is properly sized before using a script processor in production.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/script-processor.html
func IngestProcessorScript(ctx *pulumi.Context, args *IngestProcessorScriptArgs, opts ...pulumi.InvokeOption) (*IngestProcessorScriptResult, error) {
	opts = pkgInvokeDefaultOpts(opts)
	var rv IngestProcessorScriptResult
	err := ctx.Invoke("elasticstack:index/ingestProcessorScript:IngestProcessorScript", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking IngestProcessorScript.
type IngestProcessorScriptArgs struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Script language.
	Lang *string `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params *string `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId *string `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source *string `pulumi:"source"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

// A collection of values returned by IngestProcessorScript.
type IngestProcessorScriptResult struct {
	// Description of the processor.
	Description *string `pulumi:"description"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Script language.
	Lang *string `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params *string `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId *string `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source *string `pulumi:"source"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
}

func IngestProcessorScriptOutput(ctx *pulumi.Context, args IngestProcessorScriptOutputArgs, opts ...pulumi.InvokeOption) IngestProcessorScriptResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (IngestProcessorScriptResult, error) {
			args := v.(IngestProcessorScriptArgs)
			r, err := IngestProcessorScript(ctx, &args, opts...)
			var s IngestProcessorScriptResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(IngestProcessorScriptResultOutput)
}

// A collection of arguments for invoking IngestProcessorScript.
type IngestProcessorScriptOutputArgs struct {
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Script language.
	Lang pulumi.StringPtrInput `pulumi:"lang"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Object containing parameters for the script.
	Params pulumi.StringPtrInput `pulumi:"params"`
	// ID of a stored script. If no `source` is specified, this parameter is required.
	ScriptId pulumi.StringPtrInput `pulumi:"scriptId"`
	// Inline script. If no id is specified, this parameter is required.
	Source pulumi.StringPtrInput `pulumi:"source"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
}

func (IngestProcessorScriptOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorScriptArgs)(nil)).Elem()
}

// A collection of values returned by IngestProcessorScript.
type IngestProcessorScriptResultOutput struct{ *pulumi.OutputState }

func (IngestProcessorScriptResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngestProcessorScriptResult)(nil)).Elem()
}

func (o IngestProcessorScriptResultOutput) ToIngestProcessorScriptResultOutput() IngestProcessorScriptResultOutput {
	return o
}

func (o IngestProcessorScriptResultOutput) ToIngestProcessorScriptResultOutputWithContext(ctx context.Context) IngestProcessorScriptResultOutput {
	return o
}

// Description of the processor.
func (o IngestProcessorScriptResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// Internal identifier of the resource.
func (o IngestProcessorScriptResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o IngestProcessorScriptResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o IngestProcessorScriptResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o IngestProcessorScriptResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) string { return v.Json }).(pulumi.StringOutput)
}

// Script language.
func (o IngestProcessorScriptResultOutput) Lang() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.Lang }).(pulumi.StringPtrOutput)
}

// Handle failures for the processor.
func (o IngestProcessorScriptResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Object containing parameters for the script.
func (o IngestProcessorScriptResultOutput) Params() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.Params }).(pulumi.StringPtrOutput)
}

// ID of a stored script. If no `source` is specified, this parameter is required.
func (o IngestProcessorScriptResultOutput) ScriptId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.ScriptId }).(pulumi.StringPtrOutput)
}

// Inline script. If no id is specified, this parameter is required.
func (o IngestProcessorScriptResultOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.Source }).(pulumi.StringPtrOutput)
}

// Identifier for the processor.
func (o IngestProcessorScriptResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IngestProcessorScriptResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(IngestProcessorScriptResultOutput{})
}
