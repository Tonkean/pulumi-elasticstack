// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Creates an API key for access without requiring basic authentication. See, https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-api-key.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"encoding/json"
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			tmpJSON0, err := json.Marshal(map[string]interface{}{
//				"role-a": map[string]interface{}{
//					"cluster": []string{
//						"all",
//					},
//					"indices": []map[string]interface{}{
//						map[string]interface{}{
//							"names": []string{
//								"index-a*",
//							},
//							"privileges": []string{
//								"read",
//							},
//						},
//					},
//				},
//			})
//			if err != nil {
//				return err
//			}
//			json0 := string(tmpJSON0)
//			tmpJSON1, err := json.Marshal(map[string]interface{}{
//				"env":    "testing",
//				"open":   false,
//				"number": 49,
//			})
//			if err != nil {
//				return err
//			}
//			json1 := string(tmpJSON1)
//			apiKeyElasticstackElasticsearchSecurityApiKey, err := elasticstack.NewElasticstackElasticsearchSecurityApiKey(ctx, "apiKeyElasticstackElasticsearchSecurityApiKey", &elasticstack.ElasticstackElasticsearchSecurityApiKeyArgs{
//				RoleDescriptors: pulumi.String(json0),
//				Expiration:      pulumi.String("1d"),
//				Metadata:        pulumi.String(json1),
//			})
//			if err != nil {
//				return err
//			}
//			ctx.Export("apiKey", apiKeyElasticstackElasticsearchSecurityApiKey)
//			return nil
//		})
//	}
//
// ```
//
// ## Import
//
// Import is not supported due to the generated API key only being visible on create.
type ElasticstackElasticsearchSecurityApiKey struct {
	pulumi.CustomResourceState

	// Generated API Key.
	ApiKey pulumi.StringOutput `pulumi:"apiKey"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrOutput `pulumi:"elasticsearchConnection"`
	// API key credentials which is the Base64-encoding of the UTF-8 representation of the id and apiKey joined by a colon (:).
	Encoded pulumi.StringOutput `pulumi:"encoded"`
	// Expiration time for the API key. By default, API keys never expire.
	Expiration pulumi.StringPtrOutput `pulumi:"expiration"`
	// Expiration time in milliseconds for the API key. By default, API keys never expire.
	ExpirationTimestamp pulumi.IntOutput `pulumi:"expirationTimestamp"`
	// Arbitrary metadata that you want to associate with the API key.
	Metadata pulumi.StringOutput `pulumi:"metadata"`
	// Specifies the name for this API key.
	Name pulumi.StringOutput `pulumi:"name"`
	// Role descriptors for this API key.
	RoleDescriptors pulumi.StringPtrOutput `pulumi:"roleDescriptors"`
}

// NewElasticstackElasticsearchSecurityApiKey registers a new resource with the given unique name, arguments, and options.
func NewElasticstackElasticsearchSecurityApiKey(ctx *pulumi.Context,
	name string, args *ElasticstackElasticsearchSecurityApiKeyArgs, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecurityApiKey, error) {
	if args == nil {
		args = &ElasticstackElasticsearchSecurityApiKeyArgs{}
	}

	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiKey",
		"encoded",
	})
	opts = append(opts, secrets)
	var resource ElasticstackElasticsearchSecurityApiKey
	err := ctx.RegisterResource("elasticstack:index/elasticstackElasticsearchSecurityApiKey:ElasticstackElasticsearchSecurityApiKey", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetElasticstackElasticsearchSecurityApiKey gets an existing ElasticstackElasticsearchSecurityApiKey resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetElasticstackElasticsearchSecurityApiKey(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ElasticstackElasticsearchSecurityApiKeyState, opts ...pulumi.ResourceOption) (*ElasticstackElasticsearchSecurityApiKey, error) {
	var resource ElasticstackElasticsearchSecurityApiKey
	err := ctx.ReadResource("elasticstack:index/elasticstackElasticsearchSecurityApiKey:ElasticstackElasticsearchSecurityApiKey", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ElasticstackElasticsearchSecurityApiKey resources.
type elasticstackElasticsearchSecurityApiKeyState struct {
	// Generated API Key.
	ApiKey *string `pulumi:"apiKey"`
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecurityApiKeyElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// API key credentials which is the Base64-encoding of the UTF-8 representation of the id and apiKey joined by a colon (:).
	Encoded *string `pulumi:"encoded"`
	// Expiration time for the API key. By default, API keys never expire.
	Expiration *string `pulumi:"expiration"`
	// Expiration time in milliseconds for the API key. By default, API keys never expire.
	ExpirationTimestamp *int `pulumi:"expirationTimestamp"`
	// Arbitrary metadata that you want to associate with the API key.
	Metadata *string `pulumi:"metadata"`
	// Specifies the name for this API key.
	Name *string `pulumi:"name"`
	// Role descriptors for this API key.
	RoleDescriptors *string `pulumi:"roleDescriptors"`
}

type ElasticstackElasticsearchSecurityApiKeyState struct {
	// Generated API Key.
	ApiKey pulumi.StringPtrInput
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrInput
	// API key credentials which is the Base64-encoding of the UTF-8 representation of the id and apiKey joined by a colon (:).
	Encoded pulumi.StringPtrInput
	// Expiration time for the API key. By default, API keys never expire.
	Expiration pulumi.StringPtrInput
	// Expiration time in milliseconds for the API key. By default, API keys never expire.
	ExpirationTimestamp pulumi.IntPtrInput
	// Arbitrary metadata that you want to associate with the API key.
	Metadata pulumi.StringPtrInput
	// Specifies the name for this API key.
	Name pulumi.StringPtrInput
	// Role descriptors for this API key.
	RoleDescriptors pulumi.StringPtrInput
}

func (ElasticstackElasticsearchSecurityApiKeyState) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecurityApiKeyState)(nil)).Elem()
}

type elasticstackElasticsearchSecurityApiKeyArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection *ElasticstackElasticsearchSecurityApiKeyElasticsearchConnection `pulumi:"elasticsearchConnection"`
	// Expiration time for the API key. By default, API keys never expire.
	Expiration *string `pulumi:"expiration"`
	// Arbitrary metadata that you want to associate with the API key.
	Metadata *string `pulumi:"metadata"`
	// Specifies the name for this API key.
	Name *string `pulumi:"name"`
	// Role descriptors for this API key.
	RoleDescriptors *string `pulumi:"roleDescriptors"`
}

// The set of arguments for constructing a ElasticstackElasticsearchSecurityApiKey resource.
type ElasticstackElasticsearchSecurityApiKeyArgs struct {
	// Elasticsearch connection configuration block.
	ElasticsearchConnection ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrInput
	// Expiration time for the API key. By default, API keys never expire.
	Expiration pulumi.StringPtrInput
	// Arbitrary metadata that you want to associate with the API key.
	Metadata pulumi.StringPtrInput
	// Specifies the name for this API key.
	Name pulumi.StringPtrInput
	// Role descriptors for this API key.
	RoleDescriptors pulumi.StringPtrInput
}

func (ElasticstackElasticsearchSecurityApiKeyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*elasticstackElasticsearchSecurityApiKeyArgs)(nil)).Elem()
}

type ElasticstackElasticsearchSecurityApiKeyInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityApiKeyOutput() ElasticstackElasticsearchSecurityApiKeyOutput
	ToElasticstackElasticsearchSecurityApiKeyOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyOutput
}

func (*ElasticstackElasticsearchSecurityApiKey) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (i *ElasticstackElasticsearchSecurityApiKey) ToElasticstackElasticsearchSecurityApiKeyOutput() ElasticstackElasticsearchSecurityApiKeyOutput {
	return i.ToElasticstackElasticsearchSecurityApiKeyOutputWithContext(context.Background())
}

func (i *ElasticstackElasticsearchSecurityApiKey) ToElasticstackElasticsearchSecurityApiKeyOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityApiKeyOutput)
}

// ElasticstackElasticsearchSecurityApiKeyArrayInput is an input type that accepts ElasticstackElasticsearchSecurityApiKeyArray and ElasticstackElasticsearchSecurityApiKeyArrayOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecurityApiKeyArrayInput` via:
//
//	ElasticstackElasticsearchSecurityApiKeyArray{ ElasticstackElasticsearchSecurityApiKeyArgs{...} }
type ElasticstackElasticsearchSecurityApiKeyArrayInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityApiKeyArrayOutput() ElasticstackElasticsearchSecurityApiKeyArrayOutput
	ToElasticstackElasticsearchSecurityApiKeyArrayOutputWithContext(context.Context) ElasticstackElasticsearchSecurityApiKeyArrayOutput
}

type ElasticstackElasticsearchSecurityApiKeyArray []ElasticstackElasticsearchSecurityApiKeyInput

func (ElasticstackElasticsearchSecurityApiKeyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecurityApiKeyArray) ToElasticstackElasticsearchSecurityApiKeyArrayOutput() ElasticstackElasticsearchSecurityApiKeyArrayOutput {
	return i.ToElasticstackElasticsearchSecurityApiKeyArrayOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecurityApiKeyArray) ToElasticstackElasticsearchSecurityApiKeyArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityApiKeyArrayOutput)
}

// ElasticstackElasticsearchSecurityApiKeyMapInput is an input type that accepts ElasticstackElasticsearchSecurityApiKeyMap and ElasticstackElasticsearchSecurityApiKeyMapOutput values.
// You can construct a concrete instance of `ElasticstackElasticsearchSecurityApiKeyMapInput` via:
//
//	ElasticstackElasticsearchSecurityApiKeyMap{ "key": ElasticstackElasticsearchSecurityApiKeyArgs{...} }
type ElasticstackElasticsearchSecurityApiKeyMapInput interface {
	pulumi.Input

	ToElasticstackElasticsearchSecurityApiKeyMapOutput() ElasticstackElasticsearchSecurityApiKeyMapOutput
	ToElasticstackElasticsearchSecurityApiKeyMapOutputWithContext(context.Context) ElasticstackElasticsearchSecurityApiKeyMapOutput
}

type ElasticstackElasticsearchSecurityApiKeyMap map[string]ElasticstackElasticsearchSecurityApiKeyInput

func (ElasticstackElasticsearchSecurityApiKeyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (i ElasticstackElasticsearchSecurityApiKeyMap) ToElasticstackElasticsearchSecurityApiKeyMapOutput() ElasticstackElasticsearchSecurityApiKeyMapOutput {
	return i.ToElasticstackElasticsearchSecurityApiKeyMapOutputWithContext(context.Background())
}

func (i ElasticstackElasticsearchSecurityApiKeyMap) ToElasticstackElasticsearchSecurityApiKeyMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ElasticstackElasticsearchSecurityApiKeyMapOutput)
}

type ElasticstackElasticsearchSecurityApiKeyOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityApiKeyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityApiKeyOutput) ToElasticstackElasticsearchSecurityApiKeyOutput() ElasticstackElasticsearchSecurityApiKeyOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityApiKeyOutput) ToElasticstackElasticsearchSecurityApiKeyOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyOutput {
	return o
}

// Generated API Key.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) ApiKey() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringOutput { return v.ApiKey }).(pulumi.StringOutput)
}

// Elasticsearch connection configuration block.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) ElasticsearchConnection() ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrOutput {
		return v.ElasticsearchConnection
	}).(ElasticstackElasticsearchSecurityApiKeyElasticsearchConnectionPtrOutput)
}

// API key credentials which is the Base64-encoding of the UTF-8 representation of the id and apiKey joined by a colon (:).
func (o ElasticstackElasticsearchSecurityApiKeyOutput) Encoded() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringOutput { return v.Encoded }).(pulumi.StringOutput)
}

// Expiration time for the API key. By default, API keys never expire.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) Expiration() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringPtrOutput { return v.Expiration }).(pulumi.StringPtrOutput)
}

// Expiration time in milliseconds for the API key. By default, API keys never expire.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) ExpirationTimestamp() pulumi.IntOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.IntOutput { return v.ExpirationTimestamp }).(pulumi.IntOutput)
}

// Arbitrary metadata that you want to associate with the API key.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) Metadata() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringOutput { return v.Metadata }).(pulumi.StringOutput)
}

// Specifies the name for this API key.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// Role descriptors for this API key.
func (o ElasticstackElasticsearchSecurityApiKeyOutput) RoleDescriptors() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ElasticstackElasticsearchSecurityApiKey) pulumi.StringPtrOutput { return v.RoleDescriptors }).(pulumi.StringPtrOutput)
}

type ElasticstackElasticsearchSecurityApiKeyArrayOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityApiKeyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityApiKeyArrayOutput) ToElasticstackElasticsearchSecurityApiKeyArrayOutput() ElasticstackElasticsearchSecurityApiKeyArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityApiKeyArrayOutput) ToElasticstackElasticsearchSecurityApiKeyArrayOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyArrayOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityApiKeyArrayOutput) Index(i pulumi.IntInput) ElasticstackElasticsearchSecurityApiKeyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecurityApiKey {
		return vs[0].([]*ElasticstackElasticsearchSecurityApiKey)[vs[1].(int)]
	}).(ElasticstackElasticsearchSecurityApiKeyOutput)
}

type ElasticstackElasticsearchSecurityApiKeyMapOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchSecurityApiKeyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ElasticstackElasticsearchSecurityApiKey)(nil)).Elem()
}

func (o ElasticstackElasticsearchSecurityApiKeyMapOutput) ToElasticstackElasticsearchSecurityApiKeyMapOutput() ElasticstackElasticsearchSecurityApiKeyMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityApiKeyMapOutput) ToElasticstackElasticsearchSecurityApiKeyMapOutputWithContext(ctx context.Context) ElasticstackElasticsearchSecurityApiKeyMapOutput {
	return o
}

func (o ElasticstackElasticsearchSecurityApiKeyMapOutput) MapIndex(k pulumi.StringInput) ElasticstackElasticsearchSecurityApiKeyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ElasticstackElasticsearchSecurityApiKey {
		return vs[0].(map[string]*ElasticstackElasticsearchSecurityApiKey)[vs[1].(string)]
	}).(ElasticstackElasticsearchSecurityApiKeyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityApiKeyInput)(nil)).Elem(), &ElasticstackElasticsearchSecurityApiKey{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityApiKeyArrayInput)(nil)).Elem(), ElasticstackElasticsearchSecurityApiKeyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ElasticstackElasticsearchSecurityApiKeyMapInput)(nil)).Elem(), ElasticstackElasticsearchSecurityApiKeyMap{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityApiKeyOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityApiKeyArrayOutput{})
	pulumi.RegisterOutputType(ElasticstackElasticsearchSecurityApiKeyMapOutput{})
}
