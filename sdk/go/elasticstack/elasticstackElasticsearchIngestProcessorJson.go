// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package elasticstack

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Converts a JSON string into a structured JSON object.
//
// See: https://www.elastic.co/guide/en/elasticsearch/reference/current/json-processor.html
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-elasticstack/sdk/go/elasticstack"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			jsonProc, err := elasticstack.ElasticstackElasticsearchIngestProcessorJson(ctx, &elasticstack.ElasticstackElasticsearchIngestProcessorJsonArgs{
//				Field:       "string_source",
//				TargetField: pulumi.StringRef("json_target"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			_, err = elasticstack.NewElasticstackElasticsearchIngestPipeline(ctx, "myIngestPipeline", &elasticstack.ElasticstackElasticsearchIngestPipelineArgs{
//				Processors: pulumi.StringArray{
//					*pulumi.String(jsonProc.Json),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
func ElasticstackElasticsearchIngestProcessorJson(ctx *pulumi.Context, args *ElasticstackElasticsearchIngestProcessorJsonArgs, opts ...pulumi.InvokeOption) (*ElasticstackElasticsearchIngestProcessorJsonResult, error) {
	var rv ElasticstackElasticsearchIngestProcessorJsonResult
	err := ctx.Invoke("elasticstack:index/elasticstackElasticsearchIngestProcessorJson:ElasticstackElasticsearchIngestProcessorJson", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorJson.
type ElasticstackElasticsearchIngestProcessorJsonArgs struct {
	// Flag that forces the parsed JSON to be added at the top level of the document. `targetField` must not be set when this option is chosen.
	AddToRoot *bool `pulumi:"addToRoot"`
	// When set to `replace`, root fields that conflict with fields from the parsed JSON will be overridden. When set to `merge`, conflicting fields will be merged. Only applicable if `addToRoot` is set to `true`.
	AddToRootConflictStrategy *string `pulumi:"addToRootConflictStrategy"`
	// When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys. Instead, the last encountered value for any duplicate key wins.
	AllowDuplicateKeys *bool `pulumi:"allowDuplicateKeys"`
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to be parsed.
	Field string `pulumi:"field"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field that the converted structured object will be written into. Any existing content in this field will be overwritten.
	TargetField *string `pulumi:"targetField"`
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorJson.
type ElasticstackElasticsearchIngestProcessorJsonResult struct {
	// Flag that forces the parsed JSON to be added at the top level of the document. `targetField` must not be set when this option is chosen.
	AddToRoot *bool `pulumi:"addToRoot"`
	// When set to `replace`, root fields that conflict with fields from the parsed JSON will be overridden. When set to `merge`, conflicting fields will be merged. Only applicable if `addToRoot` is set to `true`.
	AddToRootConflictStrategy *string `pulumi:"addToRootConflictStrategy"`
	// When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys. Instead, the last encountered value for any duplicate key wins.
	AllowDuplicateKeys *bool `pulumi:"allowDuplicateKeys"`
	// Description of the processor.
	Description *string `pulumi:"description"`
	// The field to be parsed.
	Field string `pulumi:"field"`
	// Internal identifier of the resource.
	Id string `pulumi:"id"`
	// Conditionally execute the processor
	If *string `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure *bool `pulumi:"ignoreFailure"`
	// JSON representation of this data source.
	Json string `pulumi:"json"`
	// Handle failures for the processor.
	OnFailures []string `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag *string `pulumi:"tag"`
	// The field that the converted structured object will be written into. Any existing content in this field will be overwritten.
	TargetField *string `pulumi:"targetField"`
}

func ElasticstackElasticsearchIngestProcessorJsonOutput(ctx *pulumi.Context, args ElasticstackElasticsearchIngestProcessorJsonOutputArgs, opts ...pulumi.InvokeOption) ElasticstackElasticsearchIngestProcessorJsonResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (ElasticstackElasticsearchIngestProcessorJsonResult, error) {
			args := v.(ElasticstackElasticsearchIngestProcessorJsonArgs)
			r, err := ElasticstackElasticsearchIngestProcessorJson(ctx, &args, opts...)
			var s ElasticstackElasticsearchIngestProcessorJsonResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(ElasticstackElasticsearchIngestProcessorJsonResultOutput)
}

// A collection of arguments for invoking ElasticstackElasticsearchIngestProcessorJson.
type ElasticstackElasticsearchIngestProcessorJsonOutputArgs struct {
	// Flag that forces the parsed JSON to be added at the top level of the document. `targetField` must not be set when this option is chosen.
	AddToRoot pulumi.BoolPtrInput `pulumi:"addToRoot"`
	// When set to `replace`, root fields that conflict with fields from the parsed JSON will be overridden. When set to `merge`, conflicting fields will be merged. Only applicable if `addToRoot` is set to `true`.
	AddToRootConflictStrategy pulumi.StringPtrInput `pulumi:"addToRootConflictStrategy"`
	// When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys. Instead, the last encountered value for any duplicate key wins.
	AllowDuplicateKeys pulumi.BoolPtrInput `pulumi:"allowDuplicateKeys"`
	// Description of the processor.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// The field to be parsed.
	Field pulumi.StringInput `pulumi:"field"`
	// Conditionally execute the processor
	If pulumi.StringPtrInput `pulumi:"if"`
	// Ignore failures for the processor.
	IgnoreFailure pulumi.BoolPtrInput `pulumi:"ignoreFailure"`
	// Handle failures for the processor.
	OnFailures pulumi.StringArrayInput `pulumi:"onFailures"`
	// Identifier for the processor.
	Tag pulumi.StringPtrInput `pulumi:"tag"`
	// The field that the converted structured object will be written into. Any existing content in this field will be overwritten.
	TargetField pulumi.StringPtrInput `pulumi:"targetField"`
}

func (ElasticstackElasticsearchIngestProcessorJsonOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorJsonArgs)(nil)).Elem()
}

// A collection of values returned by ElasticstackElasticsearchIngestProcessorJson.
type ElasticstackElasticsearchIngestProcessorJsonResultOutput struct{ *pulumi.OutputState }

func (ElasticstackElasticsearchIngestProcessorJsonResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ElasticstackElasticsearchIngestProcessorJsonResult)(nil)).Elem()
}

func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) ToElasticstackElasticsearchIngestProcessorJsonResultOutput() ElasticstackElasticsearchIngestProcessorJsonResultOutput {
	return o
}

func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) ToElasticstackElasticsearchIngestProcessorJsonResultOutputWithContext(ctx context.Context) ElasticstackElasticsearchIngestProcessorJsonResultOutput {
	return o
}

// Flag that forces the parsed JSON to be added at the top level of the document. `targetField` must not be set when this option is chosen.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) AddToRoot() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *bool { return v.AddToRoot }).(pulumi.BoolPtrOutput)
}

// When set to `replace`, root fields that conflict with fields from the parsed JSON will be overridden. When set to `merge`, conflicting fields will be merged. Only applicable if `addToRoot` is set to `true`.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) AddToRootConflictStrategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *string { return v.AddToRootConflictStrategy }).(pulumi.StringPtrOutput)
}

// When set to `true`, the JSON parser will not fail if the JSON contains duplicate keys. Instead, the last encountered value for any duplicate key wins.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) AllowDuplicateKeys() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *bool { return v.AllowDuplicateKeys }).(pulumi.BoolPtrOutput)
}

// Description of the processor.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// The field to be parsed.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) string { return v.Field }).(pulumi.StringOutput)
}

// Internal identifier of the resource.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) string { return v.Id }).(pulumi.StringOutput)
}

// Conditionally execute the processor
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) If() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *string { return v.If }).(pulumi.StringPtrOutput)
}

// Ignore failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) IgnoreFailure() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *bool { return v.IgnoreFailure }).(pulumi.BoolPtrOutput)
}

// JSON representation of this data source.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) Json() pulumi.StringOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) string { return v.Json }).(pulumi.StringOutput)
}

// Handle failures for the processor.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) OnFailures() pulumi.StringArrayOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) []string { return v.OnFailures }).(pulumi.StringArrayOutput)
}

// Identifier for the processor.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) Tag() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *string { return v.Tag }).(pulumi.StringPtrOutput)
}

// The field that the converted structured object will be written into. Any existing content in this field will be overwritten.
func (o ElasticstackElasticsearchIngestProcessorJsonResultOutput) TargetField() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ElasticstackElasticsearchIngestProcessorJsonResult) *string { return v.TargetField }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(ElasticstackElasticsearchIngestProcessorJsonResultOutput{})
}
